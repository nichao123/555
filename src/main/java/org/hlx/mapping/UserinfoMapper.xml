<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--必须指定当前映射的文件名-->
<mapper namespace="org.hlx.dao.UserinfoDao">

    <!--重用的SQL块 id名称-->
    <sql id="table" >
         select * from userinfo
    </sql>

<!--根据id查询数据-->
    <select id="findById"  parameterType="int" resultType="Userinfo">
        <include refid="table"/> where userId = #{userId}
    </select>


    <!--所有数据-->
    <select id="all" resultType="Userinfo">
--         引用这个sql块  refid定义的名称id
      <include refid="table"/>
   </select>


    <!--id：方法名唯一， parameterType参数类型-->
    <insert id="insert" parameterType="Userinfo">
     insert into userinfo(loginName,loginPass,phone,realname,amount,admin)
     values(#{loginName},#{loginPass},#{phone},#{realname},#{amount},#{admin})
    </insert>


    <!--id：方法名唯一， parameterType参数类型-->
    <update id="update" parameterType="Userinfo">
     update userinfo set loginName=#{loginName},loginPass=#{loginPass},phone=#{phone},realname=#{realname},amount=#{amount},admin=#{admin}
     where userId =#{userId}
    </update>

    <!--id：方法名唯一， parameterType参数类型 id-->
    <delete id="delete" parameterType="int">
     delete from  userinfo  where userId =#{userId}
    </delete>



    <!--根据条件来查询数据-->
    <!--<select id="findName" resultType="Userinfo">-->
        <!--&#45;&#45;         引用这个sql块  refid定义的名称id-->
        <!--<include refid="table"/>-->
        <!--<where>-->
            <!--<if test="loginName != null">-->
                <!--loginName like  concat('%',#{loginName},'%')-->
            <!--</if>-->
            <!--<if test="phone != null">-->
              <!--and  phone like  concat('%',#{phone},'%')-->
            <!--</if>-->
        <!--</where>-->
    <!--</select>-->


    <select id="findName" resultType="Userinfo">
        --         引用这个sql块  refid定义的名称id
        <include refid="table"/>
        <where>
            <if test="loginName != null">
                loginName like  concat('%',#{loginName},'%')
            </if>
            <if test="phone != null">
                and  phone like  concat('%',#{phone},'%')
            </if>
            <if test="admin != null">
                and admin=#{admin}
            </if>
        </where>
    </select>


</mapper>